<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sppart.admin.product.domain.mapper.ProductMapper">

    <!--    todo 전시 관련 정보 추가할 수 도 있음-->
    <resultMap id="detailProductInfoMap" type="com.sppart.admin.product.dto.DetailProductInfo">
        <id column="product_id" property="productId"/>
        <result column="picture" property="picture"/>
        <result column="title" property="title"/>
        <result column="artist_name" property="artistName"/>
        <result column="description" property="description"/>
        <result column="price" property="price"/>
        <result column="basic_view" property="basicView"/>
        <result column="qr_view" property="qrView"/>
        <result column="like_count" property="likeCount"/>
        <result column="order_count" property="orderCount"/>
        <association property="pictureInfo" resultMap="pictureInfoMap"/>
        <collection property="tags" resultMap="tagMap"/>
    </resultMap>

    <resultMap id="pictureInfoMap" type="com.sppart.admin.pictureinfo.domain.entity.PictureInfo">
        <id property="product_id" column="product_id"/>
        <result column="type" property="type"/>
        <result column="size" property="size"/>
        <result column="year" property="year"/>
    </resultMap>

    <resultMap id="tagMap" type="com.sppart.admin.tag.domain.entity.Tag">
        <id property="tag_id" column="tagId"/>
        <result property="name" column="tagName"/>
    </resultMap>

    <select id="findDetailProductInfosByCondition"
            parameterType="com.sppart.admin.product.dto.ProductSearchCondition"
            resultMap="detailProductInfoMap">
        SELECT prod.product_id,
        prod.picture,
        prod.title,
        prod.artist_name,
        prod.description,
        prod.price,
        prod.basic_view,
        prod.qr_view,
        prod.like_count,
        prod.order_count,
        pi.type,
        pi.size,
        pi.`year`,
        t.tag_id AS tagId,
        t.name AS tagName
        FROM product AS prod
        INNER JOIN product_with_tag AS pwt ON pwt.product_id = prod.product_id
        INNER JOIN tag AS t ON t.tag_id = pwt.tag_id
        INNER JOIN picture_info AS pi ON pi.product_id = prod.product_id
        <where>
            <if test="condition.title != null and condition.title != ''">
                AND UPPER(prod.title) LIKE CONCAT('%', UPPER(#{condition.title}), '%')
            </if>
            <if test="condition.artistName != null and condition.artistName != ''">
                AND UPPER(prod.artist_name) LIKE CONCAT('%', UPPER(#{condition.artistName}), '%')
            </if>
            <if test="condition.productId != null and !condition.productId.equals('')">
                AND prod.product_id = #{condition.productId}
            </if>
        </where>
        ORDER BY prod.product_id ASC;
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(*)
        FROM (SELECT COUNT(prod.product_id)
              FROM product AS prod
                       INNER JOIN product_with_tag AS pwt
                                  ON pwt.product_id = prod.product_id
                       INNER JOIN tag AS t ON t.tag_id = pwt.tag_id
                       INNER JOIN picture_info AS pi ON pi.product_id = prod.product_id
              GROUP BY prod.product_id) T;
    </select>

    <delete id="bulkDeleteByIds">
        <if test="ids != null and !ids.isEmpty()">
            DELETE
            FROM product
            <where>
                AND product_id IN
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </where>
        </if>
    </delete>

    <select id="findDetailProductInfoById" parameterType="Long" resultMap="detailProductInfoMap">
        SELECT prod.product_id,
               prod.picture,
               prod.title,
               prod.artist_name,
               prod.description,
               prod.price,
               prod.basic_view,
               prod.qr_view,
               prod.like_count,
               prod.order_count,
               pi.type,
               pi.size,
               pi.`year`,
               t.tag_id AS tagId,
               t.name   AS tagName
        FROM product AS prod
                 INNER JOIN product_with_tag AS pwt ON pwt.product_id = prod.product_id
                 INNER JOIN tag AS t ON t.tag_id = pwt.tag_id
                 INNER JOIN picture_info AS pi ON pi.product_id = prod.product_id
        WHERE prod.product_id = #{productId};
    </select>

    <insert id="save" parameterType="com.sppart.admin.product.domain.entity.Product" useGeneratedKeys="true"
            keyProperty="product_id">
        INSERT INTO product(picture, title, artist_name, description, price, basic_view, qr_view, like_count,
                            order_count)
        VALUES (#{picture}, #{title}, #{artistName}, #{description}, #{price}, #{basicView}, #{qrView}, #{likeCount},
                #{orderCount});
    </insert>
</mapper>