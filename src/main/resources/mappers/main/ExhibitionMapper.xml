<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sppart.admin.exhibition.domain.mapper.ExhibitionMapper">

    <resultMap id="exhibitionByConditionMap" type="com.sppart.admin.exhibition.dto.ExhibitionByCondition">
        <id column="exhibition_id" property="exhibitionId"/>
        <result column="title" property="title"/>
        <result column="subHeading" property="subHeading"/>
        <result column="location" property="location"/>
        <result column="start_date" property="startDate"/>
        <result column="end_Date" property="endDate"/>
        <result column="status" property="status"/>
        <result column="is_display" property="isDisplay"/>
        <collection property="products" ofType="com.sppart.admin.product.dto.ProductOnlyArtistNameDto">
            <id column="product_id" property="productId"/>
            <result column="artist_name" property="artistName"/>
        </collection>
    </resultMap>

    <select id="findExhibitionsByCondition"
            parameterType="com.sppart.admin.exhibition.dto.ResponseExhibitionByCondition"
            resultMap="exhibitionByConditionMap">
        SELECT exhi.exhibition_id,
        exhi.title,
        exhi.subHeading,
        exhi.location,
        exhi.start_date,
        exhi.end_Date,
        exhi.status,
        exhi.is_display,
        pro.product_id AS product_id,
        pro.artist_name AS artist_name
        FROM exhibition AS exhi
        LEFT OUTER JOIN product_exhibition AS pe ON pe.exhibition_id = exhi.exhibition_id
        LEFT OUTER JOIN product AS pro ON pro.product_id = pe.product_id
        <where>
            <if test="condition.startDate != null and condition.startDate">
                <![CDATA[
                    AND exhi.start_date >= #{condition.startDate}
                ]]>
            </if>
            <if test="condition.endDate != null">
                <![CDATA[
                    AND exhi.end_date <= #{condition.endDate}
                ]]>
            </if>
            <if test="condition.title != null and condition.title != ''">
                AND UPPER(exhi.title) LIKE CONCAT('%', UPPER(#{condition.title}), '%')
            </if>
        </where>
        ORDER BY exhi.exhibition_id;
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(*)
        FROM exhibition;
    </select>

    <delete id="bulkDeleteByIds">
        <if test="ids != null and !ids.isEmpty()">
            DELETE
            FROM exhibition
            <where>
                AND exhibition_id IN
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </where>
        </if>
    </delete>

    <select id="findById" resultType="com.sppart.admin.exhibition.domain.entity.Exhibition">
        SELECT *
        FROM exhibition
        WHERE exhibition_id = #{exhibitionId};
    </select>

    <update id="updateOnlyDisplay">
        UPDATE exhibition
        SET is_display = #{isDisplay}
        WHERE exhibition_id = #{exhibitionId};
    </update>

    <resultMap id="findByIdWithParticipatedProductsMap"
               type="com.sppart.admin.exhibition.dto.ExhibitionWithParticipatedProducts">
        <id column="exhibition_id" property="exhibitionId"/>
        <result column="title" property="title"/>
        <result column="subHeading" property="subHeading"/>
        <result column="location" property="location"/>
        <result column="start_date" property="startDate"/>
        <result column="end_Date" property="endDate"/>
        <result column="status" property="status"/>
        <result column="poster" property="poster"/>
        <collection property="products" ofType="com.sppart.admin.product.dto.ProductForSpecificExhibition">
            <id column="product_id" property="productId"/>
            <result column="product_title" property="title"/>
            <result column="basic_view" property="basicView"/>
            <result column="qr_view" property="qrView"/>
            <result column="like_count" property="likeCount"/>
            <result column="order_count" property="orderCount"/>
        </collection>
    </resultMap>

    <select id="findByIdWithParticipatedProducts" parameterType="Long" resultMap="findByIdWithParticipatedProductsMap">
        SELECT exhi.exhibition_id,
               exhi.title,
               exhi.subHeading,
               exhi.start_date,
               exhi.end_Date,
               exhi.location,
               exhi.status,
               exhi.poster,
               pro.product_id AS product_id,
               pro.title      AS product_title,
               pro.basic_view,
               pro.qr_view,
               pro.like_count,
               pro.order_count
        FROM exhibition AS exhi
                 LEFT OUTER JOIN product_exhibition AS pe ON pe.exhibition_id = exhi.exhibition_id
                 LEFT OUTER JOIN product AS pro ON pro.product_id = pe.product_id
        WHERE exhi.exhibition_id = #{exhibitionId};
    </select>

    <insert id="save" parameterType="com.sppart.admin.exhibition.domain.entity.Exhibition" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO exhibition(title, subHeading, start_date, end_date, location, status, poster, is_display)
        VALUES (#{title}, #{subHeading}, #{startDate}, #{endDate}, #{location}, #{status}, #{poster}, #{isDisplay});
    </insert>

    <update id="update">
        UPDATE exhibition
        SET title      = #{req.title},
            subHeading = #{req.subHeading},
            location   = #{req.location},
            start_date = #{req.startDate},
            end_date   = #{req.endDate},
            status     = #{req.status},
            poster     = #{poster}
        WHERE exhibition_id = #{exhibitionId};
    </update>
</mapper>